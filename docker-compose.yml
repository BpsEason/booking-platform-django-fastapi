version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: booking-platform-django-fastapi_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password # **CHANGE ME IN PRODUCTION**
      MYSQL_DATABASE: rezo_db
      MYSQL_USER: rezo_user
      MYSQL_PASSWORD: rezo_password # **CHANGE ME IN PRODUCTION**
    ports:
      - "3306:3306"
    volumes:
      - ./docker_volumes/mysql_data:/var/lib/mysql
      - ./mysql_init_scripts:/docker-entrypoint-initdb.d # For initial SQL scripts
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      start_period: 10s
    restart: always

  redis:
    image: redis:7.0-alpine
    container_name: booking-platform-django-fastapi_redis
    command: redis-server --requirepass Ycl00BcRM5IwuM52w8V7w9XZi2xfbNdi
    ports:
      - "6379:6379"
    volumes:
      - ./docker_volumes/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "INFO"]
      interval: 1s
      timeout: 3s
      retries: 5
    restart: always

  django_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: booking-platform-django-fastapi_django_backend
    env_file:
      - ./.env_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"] # Add a health check endpoint in Django
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: always

  fastapi_recommendation:
    build:
      context: ./recommendation_engine
      dockerfile: Dockerfile
    container_name: booking-platform-django-fastapi_fastapi_reco
    env_file:
      - ./.env_fastapi
    ports:
      - "8001:8001"
    volumes:
      - ./recommendation_engine:/app
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/recommend/health/"] # Add a health check endpoint in FastAPI
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: always

  nginx:
    image: nginx:stable-alpine
    container_name: booking-platform-django-fastapi_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/var/www/html:ro # Mount compiled Vue assets
    depends_on:
      - django_backend
      - fastapi_recommendation
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: booking-platform-django-fastapi_prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker_volumes/prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: booking-platform-django-fastapi_grafana
    volumes:
      - ./docker_volumes/grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin # **CHANGE ME IN PRODUCTION**
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always

  mysql_exporter:
    image: prom/mysqld-exporter:latest
    container_name: booking-platform-django-fastapi_mysql_exporter
    environment:
      DATA_SOURCE_NAME: ':@tcp(mysql:3306)/' # Uses variables from mysql service
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    restart: always

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:
